{"version":3,"sources":["components/TableHeader.js","components/UserCard.js","components/TableItem.js","components/TableListItems.js","components/Toolbar.js","components/Loader.js","components/AddPopup.js","components/App.js","utils/constants.js","reportWebVitals.js","index.js"],"names":["TableHeader","handleSort","className","onClick","UserCard","isProfileOpen","firstName","lastName","address","description","streetAddress","city","state","zip","TableItem","user","React","useState","setIsProfileOpen","id","email","phone","TableListItems","users","map","Toolbar","handleReset","handleOpenPopup","setText","text","placeholder","value","onChange","e","target","type","Loader","AddPopup","isPopupOpen","handleClosePopup","createNewUser","isLoading","setIsLoading","setID","setFirstName","setLastName","setEmail","setPhone","evt","currentTarget","closePopuponOverlay","onSubmit","preventDefault","name","required","App","setUsers","activeColumn","setActiveColumn","direction","setDirection","setIsPopupOpen","getUsers","a","url","fetch","res","json","data","console","log","visibleItems","length","filter","elem","Object","values","slice","some","toString","toLowerCase","indexOf","searchData","column","sortedArray","sort","b","A","B","reverse","newUsers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAyBeA,MAvBf,YAAyC,IAAhBC,EAAe,EAAfA,WAErB,OACI,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAcC,QAAS,WAAQF,EAAW,OAAzD,SACI,uBAAOC,UAAU,eAAjB,kBAEJ,qBAAKA,UAAU,cAAcC,QAAS,WAAQF,EAAW,cAAzD,SACI,uBAAOC,UAAU,eAAjB,0BAEJ,qBAAKA,UAAU,cAAcC,QAAS,WAAQF,EAAW,aAAzD,SACI,uBAAOC,UAAU,eAAjB,yBAEJ,qBAAKA,UAAU,cAAcC,QAAS,WAAQF,EAAW,UAAzD,SACI,uBAAOC,UAAU,eAAjB,qBAEJ,qBAAKA,UAAU,cAAcC,QAAS,WAAQF,EAAW,UAAzD,SACI,uBAAOC,UAAU,eAAjB,yBCmCDE,MApDf,YAAkF,IAA7DC,EAA4D,EAA5DA,cAAeC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YAEvDC,EAAoCF,EAApCE,cAAeC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,MAAOC,EAAQL,EAARK,IAEnC,OACI,sBAAKX,UAAS,UAAKG,EAAe,iBAAmB,wCAArD,UACQ,sBAAKH,UAAU,kCAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,wCAEJ,qBAAKA,UAAU,kCAAf,SACI,+CAEJ,qBAAKA,UAAU,kCAAf,SACI,0CAEJ,qBAAKA,UAAU,kCAAf,SACI,wCAEJ,qBAAKA,UAAU,kCAAf,SACI,yCAEJ,qBAAKA,UAAU,kCAAf,SACI,4CAGR,sBAAKA,UAAU,kCAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,mBAAGA,UAAU,cAAb,SAA6BI,EAAY,IAAMC,MAEnD,qBAAKL,UAAU,kCAAf,SACI,mBAAGA,UAAU,sCAAb,SAAqDO,MAEzD,qBAAKP,UAAU,kCAAf,SACI,mBAAGA,UAAU,eAAb,SAA8BQ,MAGlC,qBAAKR,UAAU,kCAAf,SACI,mBAAGA,UAAU,cAAb,SAA6BS,MAEjC,qBAAKT,UAAU,kCAAf,SACI,mBAAGA,UAAU,cAAb,SAA6BU,MAEjC,qBAAKV,UAAU,kCAAf,SACI,mBAAGA,UAAU,cAAb,SAA6BW,aCNtCC,MArCf,YAA+B,IAATC,EAAQ,EAARA,KAAQ,EAEgBC,IAAMC,UAAS,GAF/B,mBAEnBZ,EAFmB,KAEJa,EAFI,KAIlBC,EAAgEJ,EAAhEI,GAAIb,EAA4DS,EAA5DT,UAAWC,EAAiDQ,EAAjDR,SAAUa,EAAuCL,EAAvCK,MAAOC,EAAgCN,EAAhCM,MAAOb,EAAyBO,EAAzBP,QAASC,EAAgBM,EAAhBN,YAMxD,OACQ,qCACA,sBAAKP,UAAU,aAAaC,QAAS,WALzCe,GAAkBb,IAKd,UACI,qBAAKH,UAAU,cAAf,SACI,uBAAOA,UAAU,eAAjB,SAAkCiB,MAEtC,qBAAKjB,UAAU,cAAf,SACI,uBAAOA,UAAU,eAAjB,SAAkCI,MAEtC,qBAAKJ,UAAU,cAAf,SACI,uBAAOA,UAAU,eAAjB,SAAkCK,MAEtC,qBAAKL,UAAU,cAAf,SACI,uBAAOA,UAAU,eAAjB,SAAkCkB,MAEtC,qBAAKlB,UAAU,cAAf,SACI,uBAAOA,UAAU,eAAjB,SAAkCmB,SAG1C,cAAC,EAAD,CAAqBhB,cAAgBA,EACjCC,UAAYA,EAAYC,SAAWA,EAAWC,QAAUA,EAAUC,YAAcA,GADpEU,OChBbG,MAbf,YAAsE,IAA3CC,EAA0C,EAA1CA,MAAOlB,EAAmC,EAAnCA,cAAea,EAAoB,EAApBA,iBAE7C,OACIK,EAAMC,KAAI,SAACT,GAEP,OACI,mCACA,cAAC,EAAD,CAA2BA,KAAOA,EAAOV,cAAgBA,EAAgBa,iBAAmBA,GAA3EH,EAAKI,UCOvBM,MAff,YAAqE,IAAjDC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,KAMvD,OACI,uBAAM3B,UAAU,aAAhB,UACI,uBAAOA,UAAU,eAAe4B,YAAY,iBAAiBC,MAAQF,EAAOG,SAN/D,SAACC,GAClBL,EAAQK,EAAEC,OAAOH,UAMb,wBAAQI,KAAK,SAASjC,UAAU,mBAAmBC,QAAS,WAAMuB,EAAY,KAA9E,mBACA,wBAAQS,KAAK,SAASjC,UAAU,mBAAmBC,QAAS,WAAMwB,KAAlE,qBCDGS,MATf,WAEI,OACI,mCACA,oBAAIlC,UAAU,SAAd,2BC8DOmC,MAjEf,YAA+F,IAA1EC,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,iBAAkBC,EAA0C,EAA1CA,cAA0C,KAA3BC,UAA2B,EAAhBC,aACtD1B,IAAMC,SAAS,KADuD,mBACnFE,EADmF,KAC/EwB,EAD+E,OAExD3B,IAAMC,SAAS,IAFyC,mBAEnFX,EAFmF,KAExEsC,EAFwE,OAG1D5B,IAAMC,SAAS,IAH2C,mBAGnFV,EAHmF,KAGzEsC,EAHyE,OAIhE7B,IAAMC,SAAS,IAJiD,mBAInFG,EAJmF,KAI5E0B,EAJ4E,OAKhE9B,IAAMC,SAAS,IALiD,mBAKnFI,EALmF,KAK5E0B,EAL4E,KAiD1F,OACI,qBAAK7C,UAAS,UAAKoC,EAAc,sBAAwB,SAAWnC,QAAS,SAAC6C,IAPtD,SAACA,GACrBA,EAAId,SAAWc,EAAIC,eACnBV,IAKkFW,CAAoBF,IAA1G,SACI,uBAAM9C,UAAU,cAAciD,SA3BjB,SAAClB,GAClBA,EAAEmB,iBASFZ,EARgB,CACZrB,GAAIA,EACJb,UAAWA,EACXC,SAAUA,EACVa,MAAOA,EACPC,MAAOA,IAIXsB,EAAM,IACNC,EAAa,IACbC,EAAY,IACZC,EAAS,IACTC,EAAS,IACTR,KAWI,UACI,oBAAIrC,UAAU,eAAd,6BACA,uBAAOA,UAAU,eAAemD,KAAK,KAAKvB,YAAY,UAAUK,KAAK,OAAOmB,UAAQ,EAACvB,MAAQZ,EAAKa,SA9C3F,SAACC,GAChBU,EAAMV,EAAEC,OAAOH,UA8CP,uBAAO7B,UAAU,eAAemD,KAAK,YAAYvB,YAAY,kBAAkBK,KAAK,OAAOmB,UAAQ,EAACvB,MAAQzB,EAAY0B,SA3C9G,SAACC,GACnBW,EAAaX,EAAEC,OAAOH,UA2Cd,uBAAO7B,UAAU,eAAemD,KAAK,WAAWvB,YAAY,iBAAiBK,KAAK,OAAOmB,UAAQ,EAAEvB,MAAQxB,EAAYyB,SAzC7G,SAACC,GACnBY,EAAYZ,EAAEC,OAAOH,UAyCb,uBAAO7B,UAAU,eAAemD,KAAK,QAAQvB,YAAY,aAAaK,KAAK,QAAQmB,UAAQ,EAACvB,MAAQX,EAASY,SAvCnG,SAACC,GACnBa,EAASb,EAAEC,OAAOH,UAuCV,uBAAO7B,UAAU,eAAemD,KAAK,QAAQvB,YAAY,aAAaK,KAAK,QAAQmB,UAAQ,EAACvB,MAAQV,EAASW,SArCnG,SAACC,GACnBc,EAASd,EAAEC,OAAOH,UAqCV,wBAAQ7B,UAAU,oBAAoBiC,KAAK,SAA3C,iBACA,wBAAQjC,UAAU,mBAAmBiC,KAAK,SAAShC,QAAS,WAAQoC,OARxE,UCyFGgB,MAvIf,WAAgB,IAAD,EAEYvC,IAAMC,SAAS,IAF3B,mBAEPM,EAFO,KAEAiC,EAFA,OAG0BxC,IAAMC,SAAS,IAHzC,mBAGPwC,EAHO,KAGOC,EAHP,OAIoB1C,IAAMC,SAAS,IAJnC,mBAIP0C,EAJO,KAIIC,EAJJ,OAKU5C,IAAMC,SAAS,IALzB,mBAKPY,EALO,KAKDD,EALC,OAMwBZ,IAAMC,UAAS,GANvC,mBAMPqB,EANO,KAMMuB,EANN,OAOoB7C,IAAMC,UAAS,GAPnC,mBAOPwB,EAPO,KAOIC,EAPJ,KAuBRoB,EAAW,SAAC3B,GAAD,6BAAU,gCAAA4B,EAAA,6DAC1BrB,GAAa,GAETsB,EAAM,GACG,UAAT7B,IAAkB6B,ECnCM,2NDoCf,QAAT7B,IAAgB6B,EClCM,qOD6BA,kBAQNC,MAAMD,GARA,cAQlBE,EARkB,iBASLA,EAAIC,OATC,QASlBC,EATkB,OAUxBZ,EAASY,GAVe,kDAYzBC,QAAQC,IAAR,MAZyB,QAe1B5B,GAAa,GAfa,2DAqFrB6B,EAnCa,SAACH,EAAMvC,GACzB,OAAoB,IAAhBA,EAAK2C,OACAJ,EAGF7C,EAAMkD,QAAO,SAAAC,GAAI,OACvBC,OAAOC,OAAOF,GACXG,MAAM,EAAG,GACTC,MAAK,SAAA/C,GAAK,OAAoE,IAAhEA,EAAMgD,WAAWC,cAAcC,QAAQpD,EAAKmD,qBA2B1CE,CAAW3D,EAAOM,GAEvC,OACC,qCACkB,IAAjBN,EAAMiD,QACN,qCACA,sBAAKtE,UAAU,cAAf,UACC,wBAAQA,UAAU,mBAAmBC,QAAS2D,EAAS,SAAvD,mCACA,wBAAQ5D,UAAU,mBAAmBC,QAAS2D,EAAS,OAAvD,oCAEArB,GAAa,cAAC,EAAD,OAGG,IAAjBlB,EAAMiD,QACN,qCACC,sBAAKtE,UAAU,QAAf,UACC,cAAC,EAAD,CAAaD,WA3ED,SAACkF,GAEhB,IAAMC,EAAc7D,EAAM8D,MAAK,SAAStB,EAAGuB,GAC1C,IAAMC,EAAe,OAAXJ,GAA8B,UAAXA,EAAoBpB,EAAEoB,GAAUpB,EAAEoB,GAAQH,cACjEQ,EAAe,OAAXL,GAA8B,UAAXA,EAAoBG,EAAEH,GAAUG,EAAEH,GAAQH,cAEvE,OAAIO,EAAIC,GAAW,EACfD,EAAIC,EAAU,EAEX,KAGR,GAAI/B,IAAiB0B,EAKpB,OAJAzB,EAAgByB,GAChB3B,EAAS4B,QACTxB,EAAa,KAKdA,EAA2B,MAAdD,EAAmB,IAAM,KACtCH,EAAuB,MAAdG,EAAmByB,EAAYK,UAAWL,MAuDhD,cAAC,EAAD,CAAS1D,YAAcE,EAAUA,QAAUA,EAAUC,KAAOA,EAAOF,gBApF/C,WACvBkC,GAAe,MAoFZ,cAAC,EAAD,CAAgBtC,MAAQgD,OAEzB,cAAC,EAAD,CAAU7B,aAAeA,EAAeD,UAAYA,EAAYH,YAAcA,EAAcC,iBAnFtE,WACxBsB,GAAe,IAkFqHrB,cA5C/G,SAACX,GACtB,IAmBM6D,EAAQ,CAnBE,CACfvE,GAAIU,EAAKV,GACTb,UAAWuB,EAAKvB,UAChBC,SAAUsB,EAAKtB,SACfa,MAAOS,EAAKT,MACZC,MAAOQ,EAAKR,MACZb,QACC,CACCE,cAAe,SACfC,KAAM,SACNC,MAAO,SACPC,IAAK,UAIPJ,YAAa,SAIA,mBAAiBc,IAE/BiC,EAASkC,aEtGIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.80d38add.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TableHeader ( { handleSort } ) {\r\n\r\n    return (\r\n        <div className=\"table__row\">\r\n            <div className=\"table__cell\" onClick={() => { handleSort('id') } }>\r\n                <label className=\"table__lable\">ID</label>\r\n            </div>\r\n            <div className=\"table__cell\" onClick={() => { handleSort('firstName')} }>\r\n                <label className=\"table__lable\">First Name</label>\r\n            </div>\r\n            <div className=\"table__cell\" onClick={() => { handleSort('lastName')} }>\r\n                <label className=\"table__lable\">Last Name</label>\r\n            </div>\r\n            <div className=\"table__cell\" onClick={() => { handleSort('email')} }>\r\n                <label className=\"table__lable\">Email</label>\r\n            </div>\r\n            <div className=\"table__cell\" onClick={() => { handleSort('phone')} }>\r\n                <label className=\"table__lable\">Phone</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableHeader;","import React from 'react';\r\n\r\nfunction UserCard ({ isProfileOpen, firstName, lastName, address, description }) {\r\n\r\n    const {streetAddress, city, state, zip } = address;\r\n\r\n    return (\r\n        <div className={`${isProfileOpen? \"table__profile\" : \"table__profile table__profile_hidden\"}`}>\r\n                <div className=\"table__cell table__cell_profile\">\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <h3 >Name</h3>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <h3>Description</h3>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <h3>Street</h3>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <h3>City</h3>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <h3>State</h3>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <h3>Index</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table__cell table__cell_profile\">\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <p className=\"table__text\">{ firstName + \" \" + lastName }</p>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <p className=\"table__text table__text_description\">{ description }</p>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <p className=\"table__text \">{ streetAddress }</p>\r\n\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <p className=\"table__text\">{ city }</p>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <p className=\"table__text\">{ state }</p>\r\n                    </div>\r\n                    <div className=\"table__cell table__cell_profile\">\r\n                        <p className=\"table__text\">{ zip }</p>\r\n                    </div>\r\n                </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React from 'react';\r\nimport UserCard from './UserCard'\r\n\r\nfunction TableItem ({ user }) {\r\n\r\n    const [isProfileOpen, setIsProfileOpen] = React.useState(false);\r\n\r\n    const { id, firstName, lastName, email, phone, address, description } = user;\r\n\r\n    const openFullProfile = () => {\r\n        setIsProfileOpen(!isProfileOpen);\r\n    };\r\n    \r\n    return (\r\n            <>\r\n            <div className=\"table__row\" onClick={()=> openFullProfile() }>\r\n                <div className=\"table__cell\">\r\n                    <label className=\"table__lable\">{ id }</label>\r\n                </div>\r\n                <div className=\"table__cell\">\r\n                    <label className=\"table__lable\">{ firstName }</label>\r\n                </div>\r\n                <div className=\"table__cell\">\r\n                    <label className=\"table__lable\">{ lastName }</label>\r\n                </div>\r\n                <div className=\"table__cell\">\r\n                    <label className=\"table__lable\">{ email }</label>\r\n                </div>\r\n                <div className=\"table__cell\">\r\n                    <label className=\"table__lable\">{ phone }</label>\r\n                </div>\r\n            </div>\r\n            <UserCard key={ id } isProfileOpen={ isProfileOpen } \r\n                firstName={ firstName } lastName={ lastName } address={ address } description={ description }\r\n            />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\nexport default TableItem;","import React from 'react';\r\nimport TableItem from './TableItem';\r\n\r\nfunction TableListItems ({ users, isProfileOpen, setIsProfileOpen }) {\r\n\r\n    return (\r\n        users.map((user) => { \r\n        \r\n            return (\r\n                <>\r\n                <TableItem key={ user.id } user={ user } isProfileOpen={ isProfileOpen } setIsProfileOpen={ setIsProfileOpen }/>\r\n                </>\r\n            )})\r\n    );\r\n}\r\n\r\nexport default TableListItems;","import React from 'react';\r\n\r\nfunction Toolbar( { handleReset, handleOpenPopup, setText, text } ) {\r\n\r\n    const searchChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className=\"table__row\">\r\n            <input className=\"table__input\" placeholder=\"Type to search\" value={ text } onChange={ searchChange }></input>\r\n            <button type=\"button\" className=\"table__reset-btn\" onClick={()=>{ handleReset('') } } >Reset</button>\r\n            <button type=\"button\" className=\"table__reset-btn\" onClick={()=>{ handleOpenPopup() } } >Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nfunction Loader(){\r\n    \r\n    return (\r\n        <>\r\n        <h1 className=\"loader\">Loading...</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Loader from './Loader';\r\n\r\nfunction AddPopup ({ isPopupOpen, handleClosePopup, createNewUser, isLoading, setIsLoading }) {\r\n    const [id, setID] = React.useState('')\r\n    const [firstName, setFirstName] = React.useState('')\r\n    const [lastName, setLastName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [phone, setPhone] = React.useState('')\r\n    \r\n    const onIdChange = (e) => {\r\n        setID(e.target.value);\r\n    }\r\n\r\n    const onFNameChange = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n    const onLNameChange = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const onPhoneChange = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            phone: phone\r\n        }\r\n\r\n        createNewUser(newUser);\r\n        setID('');\r\n        setFirstName('');\r\n        setLastName('');\r\n        setEmail('');\r\n        setPhone('');\r\n        handleClosePopup();\r\n    }\r\n\r\n    const closePopuponOverlay = (evt) => { \r\n        if (evt.target === evt.currentTarget){\r\n            handleClosePopup()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${isPopupOpen ? \"popup popup_is-open\" : \"popup\"}`} onClick={(evt)=>{ closePopuponOverlay(evt) }}>\r\n            <form className=\"popup__form\" onSubmit={ handleSubmit }>\r\n                <h3 className=\"popup__title\">Enter user info</h3>\r\n                <input className=\"popup__input\" name=\"id\" placeholder=\"Type ID\" type=\"text\" required value={ id } onChange={ onIdChange }></input>\r\n                <input className=\"popup__input\" name=\"firstName\" placeholder=\"Type first name\" type=\"text\" required value={ firstName } onChange={ onFNameChange }></input>\r\n                <input className=\"popup__input\" name=\"lastName\" placeholder=\"Type last name\" type=\"text\" required  value={ lastName }  onChange={ onLNameChange }></input>\r\n                <input className=\"popup__input\" name=\"email\" placeholder=\"Type email\" type=\"email\" required value={ email }  onChange={ onEmailChange }></input>\r\n                <input className=\"popup__input\" name=\"phone\" placeholder=\"Type phone\" type=\"phone\" required value={ phone }  onChange={ onPhoneChange }></input>\r\n                <button className=\"popup__submit-btn\" type=\"submit\" >Add</button>\r\n                <button className=\"popup__close-btn\" type=\"button\" onClick={() => { handleClosePopup() }}></button> {/* loader */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPopup;","import React from 'react';\r\n/* import { api } from '../utils/Api';\r\n */import TableHeader from './TableHeader';\r\nimport TableListItems from './TableListItems';\r\nimport Toolbar from './Toolbar';\r\nimport AddPopup from './AddPopup';\r\nimport Loader from './Loader';\r\nimport { smallUsersBase, bigUsersBase } from '../utils/constants'\r\nfunction App() {\r\n\r\n\tconst [users, setUsers] = React.useState([]);\r\n\tconst [activeColumn, setActiveColumn] = React.useState('');\r\n\tconst [direction, setDirection] = React.useState('');\r\n\tconst [text, setText] = React.useState('');\r\n\tconst [isPopupOpen, setIsPopupOpen] = React.useState(false);\r\n\tconst [isLoading, setIsLoading] = React.useState(false);\r\n\t\r\n/* \tReact.useEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tapi.getUserSmall()\r\n\t\t.then((res) => {\r\n\t\t\tsetUsers(res);\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tsetIsLoading(false);\r\n\t\t})\r\n\t}, []); */\r\n\r\n\tconst getUsers = (type) => async () => {\r\n\t\tsetIsLoading(true);\r\n\t\r\n\t\tlet url = ''\r\n\t\tif (type === 'small') url = smallUsersBase\r\n\t\tif (type === 'big') url = bigUsersBase\r\n\t\r\n\t\ttry {\r\n\t\t  const res = await fetch(url)\r\n\t\t  const data = await res.json()\r\n\t\t  setUsers(data)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t\r\n\t\tsetIsLoading(false);\r\n\t  }\r\n\r\n\tconst handleOpenPopup = () => {\r\n\t\tsetIsPopupOpen(true)\r\n\t}\r\n\r\n\tconst handleClosePopup = () => {\r\n\t\tsetIsPopupOpen(false)\r\n\t}\r\n\r\n\tconst sorting = (column) => {\r\n\r\n\t\tconst sortedArray = users.sort(function(a, b){\r\n\t\t\tconst A = column === 'id' || column === 'phone'? a[column] : a[column].toLowerCase();\r\n\t\t\tconst B = column === 'id' || column === 'phone'? b[column] : b[column].toLowerCase();\r\n\t\t\t\r\n\t\t\tif (A < B) return -1\r\n\t\t\tif (A > B) return 1\r\n\r\n\t\t\treturn 0\r\n\t\t});\r\n\r\n\t\tif (activeColumn !== column) {\r\n\t\t\tsetActiveColumn(column);\r\n\t\t\tsetUsers(sortedArray);\r\n\t\t\tsetDirection('a');\r\n\r\n\t\t\treturn\r\n\t\t};\r\n\t\t\r\n\t\tsetDirection(direction === 'a'? 'z' : 'a'); //меняется буква\r\n\t\tsetUsers(direction === 'a'? sortedArray.reverse(): sortedArray); //меняется сортировка\r\n\t};\r\n\r\n\tconst searchData = (data, text) => {\r\n\t\tif (text.length === 0){\r\n\t\t  return data\r\n\t\t}\r\n\t\r\n\t\treturn users.filter(elem =>\r\n\t\t\tObject.values(elem)\r\n\t\t\t  .slice(0, 5)\r\n\t\t\t  .some(value => value.toString().toLowerCase().indexOf(text.toLowerCase()) !== -1)\r\n\t\t)\r\n\t};\r\n\tconst createNewUser = (text) => {\r\n\t\tconst newUser = {\r\n\t\t\tid: text.id,\r\n\t\t\tfirstName: text.firstName,\r\n\t\t\tlastName: text.lastName,\r\n\t\t\temail: text.email,\r\n\t\t\tphone: text.phone,\r\n\t\t\taddress: \r\n\t\t\t\t{\r\n\t\t\t\t\tstreetAddress: 'street',\r\n\t\t\t\t\tcity: 'moscow',\r\n\t\t\t\t\tstate: 'moscow',\r\n\t\t\t\t\tzip: '114892'\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t,\r\n\t\t\tdescription: 'some',\r\n\r\n\t\t}\r\n\r\n\t\tconst newUsers = [ newUser, ...users ]\r\n\r\n\t\tsetUsers(newUsers);\r\n\t}\r\n\tconst visibleItems = searchData(users, text);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t{users.length === 0 && (\r\n\t\t\t<>\r\n\t\t\t<div className=\"startscreen\">\r\n\t\t\t\t<button className=\"startscreen__btn\" onClick={getUsers('small')}>Load small users base</button>\r\n\t\t\t\t<button className=\"startscreen__btn\" onClick={getUsers('big')}>Load big users base</button>\r\n\t\t\t</div>\r\n\t\t\t{isLoading && <Loader />}\r\n\t\t\t</>\r\n\t\t)}\r\n\t\t{users.length !== 0 && (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"table\">\r\n\t\t\t\t\t<TableHeader handleSort={ sorting }/>\r\n\t\t\t\t\t<Toolbar handleReset={ setText } setText={ setText } text={ text } handleOpenPopup={ handleOpenPopup }/>\r\n\t\t\t\t\t<TableListItems users={ visibleItems }/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AddPopup setIsLoading={ setIsLoading } isLoading={ isLoading } isPopupOpen={ isPopupOpen } handleClosePopup={ handleClosePopup } createNewUser={ createNewUser }/>\r\n\t\t\t</>\r\n\t\t)}\r\n\t\t</>\r\n  \t);\r\n};\r\n\r\nexport default App;\r\n\r\n//пагинация, разделение объема данных\r\n\r\n/* \r\n\t\t\t<>\r\n\t\t\t\t<div className=\"table\">\r\n\t\t\t\t\t<TableHeader handleSort={ sorting }/>\r\n\t\t\t\t\t<Toolbar handleReset={ setText } setText={ setText } text={ text } handleOpenPopup={ handleOpenPopup }/>\r\n\t\t\t\t\t{isLoading && <Loader />}\r\n\t\t\t\t\t<TableListItems users={ visibleItems }/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AddPopup setIsLoading={ setIsLoading } isLoading={ isLoading } isPopupOpen={ isPopupOpen } handleClosePopup={ handleClosePopup } createNewUser={ createNewUser }/>\r\n\t\t\t</>\r\n\r\n*/","export const smallUsersBase = 'http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\r\n\r\nexport const bigUsersBase = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D'\r\n\r\n\r\nconst letterA ='a'\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}